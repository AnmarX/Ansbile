- name: install jave sdk  
  hosts: webserver                                  
  become: true                                       
  vars_files:
    - vars.yml
    
  tasks: 

    - name: Update and upgrade all packages to the latest version
      apt:
        update_cache: true
        upgrade: yes
        # So it's good to include if you don't want to update the cache when it has only recently been updated.
        # 1 hour
        cache_valid_time: 86400
      ignore_errors: yes

    - name: Update apt with specific options
      command:
        cmd: apt-get -o Acquire::Check-Valid-Until=false -o Acquire::Check-Date=false update
     

    - name: create file to install on
      file: 
        path: "/opt/software/"
        state: directory
        # Read (r), Write (w), Execute (x)
        # Read (r): Can view the files in the directory.
        # Write (w): Can create or modify files.
        # Execute (x): Can enter (cd) the directory.
        # 1- Owner (User) (7)
        # 2- Group (5)
        # 3- Others (5)
        mode: '0755'
    
    - name: download jdk
      get_url:
        url: https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.deb
        dest: "/opt/software/"
        headers:
          Cookie: "oraclelicense=accept-securebackup-cookie"
        validate_certs: false
        checksum: "sha256:1db5362bab76800022cffb22bec4d6597975e34a53c834d8a4874b0b284491a4"
    
    - name: Install JDK from .deb package
      ansible.builtin.apt:
        deb: /opt/software/jdk-21_linux-x64_bin.deb

    

    # - name: create directory to install the packages on
    #   file: 
    #     path: "/usr/lib/jvm"
    #     state: directory
    #     mode: '0755'
    
    # - name: Extract JDK tarball
    #### File Format: The .deb file is not a compressed archive like
    ####  .tar.gz or .zip. Itâ€™s a Debian package file meant for installation, not extraction. 
    #    unarchive:
    #     src: /opt/software/jdk-21_linux-x64_bin.deb
    #     dest: /usr/lib/jvm
    #     # remote_src: no (Default):
    #     # The archive file (src) is local to the control node or fetched from a URL.
    #     # Ansible will copy the file from the control node to the target machine before extracting it.

    #     # remote_src: yes:
    #     # The archive file (src) is already present on the target machine.
    #     # Ansible skips the copy step and directly extracts the file from the specified location on the target machine.
    #     remote_src: yes

    - name: Make the file executable for every new session
      file:
        path: /etc/profile.d/jdk.sh
        mode: '0755'
        state: file

    - name: Add JAVA_HOME and PATH to .sh file
      blockinfile:
        path: /etc/profile.d/jdk.sh
        block: |
          export JAVA_HOME=/usr/lib/jvm/jdk-xx
          export PATH=$JAVA_HOME/bin:$PATH
        state: present
    
   
    
    - name: Source the file for immediate effect
      shell: source /etc/profile.d/jdk.sh
      args:
        executable: /bin/bash

    - name: Check Java version
      shell: java --version
      register: java_version_output

    - name: Print Java version to the console
      debug:
        msg: "{{ java_version_output.stdout }}"

        