- name: Install and configure Nginx on web servers  # Descriptive name for the playbook
  hosts: webserver                                  # Target group of servers from the inventory
  become: yes                                       # Use elevated privileges (e.g., sudo)
  vars_files:
    - vars.yml
    
  tasks:                                            # List of tasks to execute

    #- name: Copy and Execute the script 
    #script: /home/host/Ansbile_new_project/Ansbile/UpdateUpgrade.sh
  
    # Task 1: Update the package cache    
    #- name: Update the package cache                         # Refresh the package cache
    # apt:
    #   update_cache: yes

    # Task 2: Upgrade all installed packages
    #- name: Upgrade all packages                             # Perform a full system upgrade
    # apt:
    #   upgrade: full


    - name: Update and upgrade all packages to the latest version
      apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600
    
    # Task 2: Install Nginx
    - name: Install Nginx                           # Descriptive name for installing Nginx
      apt:                                          # Use the apt module
        name: nginx                                 # Specify the package name to install
        state: present                              # Ensure the package is installed

    # Task 3: Start and enable the Nginx service
    - name: Ensure Nginx is running and enabled     # Descriptive name for service management
      service:                                      # Use the service module
        name: nginx                                 # Target the Nginx service
        state: started                              # Ensure the service is running
        enabled: true  


    # Task 1: Install prerequisite packages
   
    - name: Install prerequisite packages for docker
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
        # Ensure Existence for present
        state: present

    # Task 2: Create directory for keyrings
    - name: Create directory for keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    # Task 3: Download Docker GPG key
    # - name: Download Docker GPG key
    #   get_url:
    #     url: https://download.docker.com/linux/ubuntu/gpg
    #     dest: /etc/apt/keyrings/docker.asc
    #     mode: '0644'

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
        state: present


  #Task 4: Add Docker repository
    # - name: Add Docker repository
    #   apt_repository:
    #     repo: >-
    #       deb [arch=amd64
    #       signed-by=/etc/apt/keyrings/docker.gpg]
    #       https://download.docker.com/linux/ubuntu jammy stable
    #     filename: docker
    #     state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu jammy stable"
        filename: docker
        state: present

  



    # Task 5: Update apt package cache
    # sudo apt-get update
    - name: Update apt package cache
      apt:
        update_cache: yes

    # Task 6: Install Docker Engine and related components
    # sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    - name: Install Docker Engine and related components
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present


    # - name: Add user to the docker group
    #   user:
    #     name: "{{ your_username }}"
    #     groups: docker
    #     append: yes


    # - name: Run Docker Hello World
    #   command: docker run hello-world





